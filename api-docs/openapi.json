{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Nuveo Code Challenge",
        "description": "A REST API implemented using Go programming language and Postgres database which exposes HTTP routes to manage operations linked to workflow(s).",
        "contact": {
            "name": "Icaro Ribeiro",
            "email": "icaroribeiro@hotmail.com"
        }
    },
    "servers": [{
        "url": "http://X.X.X.X:8080"
    }],
    "tags": [{
            "name": "status",
            "description": "It refers to the operation linked to service status."
        },
        {
            "name": "workflow",
            "description": "It refers to the operation linked to workflow(s)."
        }
    ],
    "paths": {
        "/status": {
            "get": {
                "tags": [
                    "status"
                ],
                "summary": "API Endpoint designed to verify if the service has started up correctly and is ready to accept requests.",
                "operationId": "GetStatus",
                "responses": {
                    "200": {
                        "description": "The service has started up successfully."
                    }
                }
            }
        },
        "/workflows": {
            "get": {
                "tags": [
                    "workflow"
                ],
                "summary": "API Endpoint designed to get the list of all workflows.",
                "operationId": "GetAllWorkflows",
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": ["inserted", "consumed"]
                                            },
                                            "data": {
                                                "description": "The JSON object of the workflow input.",
                                                "type": "object",
                                                "properties": {}
                                            },
                                            "steps": {
                                                "description": "The list of the names of all workflow steps.",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Got an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow": {
            "post": {
                "tags": [
                    "workflow"
                ],
                "summary": "API Endpoint designed to create a new workflow.",
                "operationId": "CreateWorkflow",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "data",
                                    "steps"
                                ],
                                "properties": {
                                    "data": {
                                        "description": "The JSON object of the workflow input.",
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "steps": {
                                        "description": "The list of the names of all workflow steps.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": ["inserted"]
                                        },
                                        "data": {
                                            "description": "The JSON object of the workflow input.",
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "steps": {
                                            "description": "The list of the names of all workflow steps.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Got a bad request error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Got an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflows/{workflowId}": {
            "patch": {
                "tags": [
                    "workflow"
                ],
                "summary": "API Endpoint designed to update the status of a specific workflow.",
                "operationId": "UpdateWorkflow",
                "parameters": [{
                    "name": "workflowId",
                    "in": "path",
                    "description": "The id of the workflow.",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": ["consumed"]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": ["consumed"]
                                        },
                                        "data": {
                                            "description": "The JSON object of the workflow input.",
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "steps": {
                                            "description": "The list of the names of all workflow steps.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Got a bad request error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Got a conflict error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Got an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflows/consume": {
            "get": {
                "tags": [
                    "workflow"
                ],
                "summary": "API Endpoint designed to consume a workflow from the queue and generate a CSV file with the content of its data field.",
                "operationId": "ConsumeWorkflow",
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": ["inserted"]
                                        },
                                        "data": {
                                            "description": "The JSON object of the workflow input.",
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "steps": {
                                            "description": "The list of the names of all workflow steps.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Got an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Error": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "type": "string"
                    }
                }
            }
        }
    }
}